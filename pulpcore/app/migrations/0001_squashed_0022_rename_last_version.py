# Generated by Django 3.2.14 on 2022-08-17 09:09

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pulpcore.app.models.content
import pulpcore.app.models.fields
import pulpcore.app.models.task
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('file', pulpcore.app.models.fields.ArtifactFileField(max_length=255, upload_to=pulpcore.app.models.content.Artifact.storage_path)),
                ('size', models.BigIntegerField()),
                ('md5', models.CharField(db_index=True, max_length=32)),
                ('sha1', models.CharField(db_index=True, max_length=40)),
                ('sha224', models.CharField(db_index=True, max_length=56)),
                ('sha256', models.CharField(db_index=True, max_length=64, unique=True)),
                ('sha384', models.CharField(db_index=True, max_length=96, unique=True)),
                ('sha512', models.CharField(db_index=True, max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('pulp_type', models.TextField(default=None)),
            ],
            options={
                'verbose_name_plural': 'content',
            },
            bases=(models.Model, pulpcore.app.models.content.QueryMixin),
        ),
        migrations.CreateModel(
            name='ContentAppStatus',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('last_heartbeat', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentArtifact',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('relative_path', models.TextField()),
                ('artifact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.artifact', to_field='pulp_id')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.content', to_field='pulp_id')),
            ],
            options={
                'unique_together': {('content', 'relative_path')},
            },
            bases=(models.Model, pulpcore.app.models.content.QueryMixin),
        ),
        migrations.AddField(
            model_name='content',
            name='_artifacts',
            field=models.ManyToManyField(through='core.ContentArtifact', to='core.Artifact'),
        ),
        migrations.CreateModel(
            name='ContentGuard',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('pulp_type', models.TextField(default=None)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('description', models.TextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Remote',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('pulp_type', models.TextField(default=None)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('url', models.TextField()),
                ('ca_cert', models.TextField(null=True)),
                ('client_cert', models.TextField(null=True)),
                ('client_key', models.TextField(null=True)),
                ('tls_validation', models.BooleanField(default=True)),
                ('proxy_url', models.TextField(null=True)),
                ('username', models.TextField(null=True)),
                ('password', models.TextField(null=True)),
                ('download_concurrency', models.PositiveIntegerField(default=20)),
                ('policy', models.TextField(choices=[('immediate', 'When syncing, download all metadata and content now.'), ('on_demand', 'When syncing, download metadata, but do not download content now. Instead, download content as clients request it, and save it in Pulp to be served for future client requests.'), ('streamed', 'When syncing, download metadata, but do not download content now. Instead,download content as clients request it, but never save it in Pulp. This causes future requests for that same content to have to be downloaded again.')], default='immediate')),
            ],
            options={
                'default_related_name': 'remotes',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('description', models.TextField(null=True)),
                ('next_version', models.PositiveIntegerField(default=0)),
                ('pulp_type', models.TextField(default=None)),
            ],
            options={
                'verbose_name_plural': 'repositories',
            },
        ),
        migrations.CreateModel(
            name='RepositoryVersion',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('number', models.PositiveIntegerField(db_index=True)),
                ('complete', models.BooleanField(db_index=True, default=False)),
                ('base_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='versions', to='core.repositoryversion', to_field='pulp_id')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='core.repository', to_field='pulp_id')),
            ],
            options={
                'ordering': ('number',),
                'get_latest_by': 'number',
                'default_related_name': 'versions',
                'unique_together': {('repository', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('file', models.FileField(max_length=255, upload_to='')),
                ('size', models.BigIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('last_heartbeat', models.DateTimeField(auto_now=True)),
                ('gracefully_stopped', models.BooleanField(default=False)),
                ('cleaned_up', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('state', models.TextField(choices=[('waiting', 'Waiting'), ('skipped', 'Skipped'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('canceled', 'Canceled')])),
                ('name', models.TextField()),
                ('started_at', models.DateTimeField(null=True)),
                ('finished_at', models.DateTimeField(null=True)),
                ('error', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('worker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='core.worker', to_field='pulp_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadChunk',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('offset', models.BigIntegerField()),
                ('size', models.BigIntegerField()),
                ('upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='core.upload', to_field='pulp_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReservedResource',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('resource', models.TextField(unique=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='core.worker', to_field='pulp_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskReservedResource',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.reservedresource', to_field='pulp_id')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.task', to_field='pulp_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='reservedresource',
            name='tasks',
            field=models.ManyToManyField(related_name='reserved_resources', through='core.TaskReservedResource', to='core.Task'),
        ),
        migrations.CreateModel(
            name='RepositoryVersionContentDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_type', models.CharField(choices=[('A', 'added'), ('P', 'present'), ('R', 'removed')], max_length=1)),
                ('content_type', models.TextField()),
                ('count', models.IntegerField()),
                ('repository_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counts', to='core.repositoryversion', to_field='pulp_id')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryContent',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='version_memberships', to='core.content', to_field='pulp_id')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.repository', to_field='pulp_id')),
                ('version_added', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_memberships', to='core.repositoryversion', to_field='pulp_id')),
                ('version_removed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='removed_memberships', to='core.repositoryversion', to_field='pulp_id')),
            ],
            options={
                'unique_together': {('repository', 'content', 'version_removed'), ('repository', 'content', 'version_added')},
            },
        ),
        migrations.AddField(
            model_name='repository',
            name='content',
            field=models.ManyToManyField(related_name='repositories', through='core.RepositoryContent', to='core.Content'),
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('pulp_type', models.TextField(default=None)),
                ('complete', models.BooleanField(db_index=True, default=False)),
                ('pass_through', models.BooleanField(default=False)),
                ('repository_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.repositoryversion', to_field='pulp_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseDistribution',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('pulp_type', models.TextField(default=None)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('base_path', models.TextField(unique=True)),
                ('content_guard', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.contentguard', to_field='pulp_id')),
                ('remote', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.remote', to_field='pulp_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RemoteArtifact',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('url', models.TextField(validators=[django.core.validators.URLValidator])),
                ('size', models.IntegerField(null=True)),
                ('md5', models.CharField(max_length=32, null=True)),
                ('sha1', models.CharField(max_length=40, null=True)),
                ('sha224', models.CharField(max_length=56, null=True)),
                ('sha256', models.CharField(max_length=64, null=True)),
                ('sha384', models.CharField(max_length=96, null=True)),
                ('sha512', models.CharField(max_length=128, null=True)),
                ('content_artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.contentartifact', to_field='pulp_id')),
                ('remote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.remote', to_field='pulp_id')),
            ],
            options={
                'unique_together': {('content_artifact', 'remote')},
            },
            bases=(models.Model, pulpcore.app.models.content.QueryMixin),
        ),
        migrations.CreateModel(
            name='PublishedMetadata',
            fields=[
                ('relative_path', models.TextField()),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_metadata', to='core.publication', to_field='pulp_id')),
                ('content_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='published_metadata', serialize=False, to='core.content', to_field='pulp_id')),
            ],
            options={
                'default_related_name': 'published_metadata',
                'unique_together': {('publication', 'relative_path')},
            },
        ),
        migrations.CreateModel(
            name='PublishedArtifact',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('relative_path', models.TextField()),
                ('content_artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_artifact', to='core.contentartifact', to_field='pulp_id')),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='published_artifact', to='core.publication', to_field='pulp_id')),
            ],
            options={
                'default_related_name': 'published_artifact',
                'unique_together': {('publication', 'relative_path')},
            },
        ),
        migrations.CreateModel(
            name='ReservedResourceRecord',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('resource', models.TextField(unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskReservedResourceRecord',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.reservedresourcerecord', to_field='pulp_id')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.task', to_field='pulp_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='reservedresourcerecord',
            name='tasks',
            field=models.ManyToManyField(related_name='reserved_resources_record', through='core.TaskReservedResourceRecord', to='core.Task'),
        ),
        migrations.CreateModel(
            name='CreatedResource',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('object_id', models.UUIDField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('task', models.ForeignKey(default=pulpcore.app.models.task.Task.current, on_delete=django.db.models.deletion.CASCADE, related_name='created_resources', to='core.task', to_field='pulp_id')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgressReport',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('message', models.TextField()),
                ('state', models.TextField(choices=[('waiting', 'Waiting'), ('skipped', 'Skipped'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('canceled', 'Canceled')], default='waiting')),
                ('total', models.IntegerField(null=True)),
                ('done', models.IntegerField(default=0)),
                ('suffix', models.TextField(null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to='core.task', to_field='pulp_id')),
                ('code', models.CharField(max_length=36)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileSystemExporter',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('pulp_type', models.TextField(default=None)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('path', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SigningService',
            fields=[
                ('pulp_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pulp_created', models.DateTimeField(auto_now_add=True)),
                ('pulp_last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.TextField(db_index=True, unique=True)),
                ('script', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AsciiArmoredDetachedSigningService',
            fields=[
                ('signingservice_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.signingservice')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.signingservice',),
        ),
    ]
